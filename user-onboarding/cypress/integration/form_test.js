describe('Meet MVP requirements', () =>{
    it('Type name into input and assert response', () =>{
        cy.visit('http://localhost:3000')
        cy.url().should('include', 'localhost')
        cy.get('input[name="name"]')
            .type('Ezio Auditore')
            .should('have.value', 'Ezio Auditore')
    })
    it('Type email into input', () =>{
        cy.get('input[name="email"]')
            .type('firenzeboi4life@tuscanyrules.com')
    })
    it('Type password into input', () =>{
        cy.get('input[name="password"]')
            .type('everythingispermitted')
    })
    it('Check terms of service box and assert response', () =>{
        cy.get('input[name="accept"]')
            .check()
            .should('be.checked')
    })
    it('Check submission of form data', ()=>{
        cy.get('.form-group')
            .siblings('button:nth-of-type(1)')
            .click().should('be.disabled')
        cy.contains('Ezio')
            .should('have.text', 'Ezio Auditore')
        cy.contains('firenzeboi')
            .should('have.text', 'firenzeboi4life@tuscanyrules.com')
        cy.contains('everythingispermitted')
            .should('have.text', 'Secret Password: everythingispermitted')
        cy.get('input[name="name"]')
            .should('not.have.value')
        cy.get('input[name="email"]')
            .should('not.have.value')
        cy.get('input[name="password"]')
            .should('not.have.value')
        cy.get('input[name="accept"]')
            .should('not.be.checked')
    })
    it('Check validation on incomplete form', () =>{
        cy.get('input[name="name"]')
            .type('Nova')
        cy.get('input[name="email"]')
            .type('whatisemail?')
        cy.get('input[name="password"]')
            .type('s')

        cy.contains('valid email')
            .should('have.text', 'Must be a valid email address.')
        cy.contains('Passwords must')
            .should('have.text', 'Passwords must use at least 10 characters.')
        
        
        cy.get('.form-group')
            .siblings('button:nth-of-type(1)')
            .should('be.disabled')
    })
})